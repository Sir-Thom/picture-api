basePath: /api/v1
definitions:
  controllers.PagedVideoResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/models.Video'
        type: array
      pagination:
        $ref: '#/definitions/controllers.PaginationMeta'
    type: object
  controllers.PaginationMeta:
    properties:
      current_page:
        type: integer
      per_page:
        type: integer
      total:
        type: integer
      total_pages:
        type: integer
    type: object
  models.Pictures:
    properties:
      added_date:
        type: string
      filename:
        type: string
      id:
        type: integer
      path:
        type: string
    type: object
  models.Series:
    properties:
      folderPath:
        type: string
      id:
        type: integer
      name:
        type: string
      video:
        items:
          $ref: '#/definitions/models.Video'
        type: array
    type: object
  models.Video:
    properties:
      duration_formatted:
        type: string
      file_exists:
        type: boolean
      file_size_formatted:
        description: Virtual fields (not stored in DB)
        type: string
      id:
        type: integer
      series_id:
        type: integer
      video_name:
        type: string
      video_path:
        type: string
    type: object
info:
  contact: {}
  description: Picture and Video API
  license:
    name: Apache 2.0
  title: Picture API
  version: 1.1.0
paths:
  /pictures:
    get:
      consumes:
      - application/json
      description: Get all pictures
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Pictures'
      summary: Get all pictures
      tags:
      - pictures
  /pictures/{id}:
    get:
      consumes:
      - application/json
      description: Get picture by id
      parameters:
      - description: Picture ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Pictures'
      security:
      - Bearer: []
      - API key auth: []
      summary: Get picture by id
      tags:
      - pictures
  /pictures/count:
    get:
      consumes:
      - application/json
      description: Count pictures
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            format: int64
            type: integer
      security:
      - API key auth: []
      summary: Count pictures
      tags:
      - pictures
  /pictures/paginated:
    get:
      consumes:
      - application/json
      description: Get pictures paginated
      parameters:
      - default: 1
        description: Page number
        in: query
        name: last_seen_id
        type: integer
      - default: 12
        description: Limit per page
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Pictures'
      summary: Get pictures paginated
      tags:
      - pictures
  /series:
    get:
      consumes:
      - application/json
      description: Get all series
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Series'
      summary: Get all series
      tags:
      - series
  /series/{name}:
    get:
      consumes:
      - application/json
      description: Get series by name
      parameters:
      - description: series name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Series'
      security:
      - Bearer: []
      - API key auth: []
      summary: Get series by name
      tags:
      - series
  /signin:
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Sign in
      parameters:
      - description: Email
        in: formData
        name: email
        required: true
        type: string
      - description: Password
        in: formData
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: Sign in
      tags:
      - users
  /signup/register:
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Sign up
      parameters:
      - description: Email
        in: formData
        name: email
        required: true
        type: string
      - description: Password
        in: formData
        name: password
        required: true
        type: string
      - description: Username
        in: formData
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: Sign up
      tags:
      - users
  /videos:
    get:
      consumes:
      - application/json
      description: Get paginated list of videos
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 20
        description: Results per page
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.PagedVideoResponse'
      summary: Get all videos (paginated)
      tags:
      - videos
  /videos/{name}:
    get:
      consumes:
      - application/json
      description: Search videos by name with fuzzy matching
      parameters:
      - description: Video name
        in: path
        name: name
        required: true
        type: string
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 20
        description: Results per page
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.PagedVideoResponse'
      security:
      - Bearer: []
      - APIKeyAuth: []
      summary: Get videos by name (paginated)
      tags:
      - videos
schemes:
- http
- https
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
