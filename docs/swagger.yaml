definitions:
  models.Pictures:
    properties:
      added_date:
        type: string
      data:
        items:
          type: integer
        type: array
      filename:
        type: string
      id:
        type: integer
    type: object
info:
  contact: {}
paths:
  /pictures:
    get:
      consumes:
      - application/json
      description: Get all pictures
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Pictures'
      summary: Get all pictures
      tags:
      - pictures
  /pictures/{id}:
    get:
      consumes:
      - application/json
      description: Get picture by id
      parameters:
      - description: Picture ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Pictures'
      summary: Get picture by id
      tags:
      - pictures
  /pictures/count:
    get:
      consumes:
      - application/json
      description: Count pictures
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
      summary: Count pictures
      tags:
      - pictures
  /pictures/paginated:
    get:
      consumes:
      - application/json
      description: Get pictures paginated
      parameters:
      - default: 1
        description: Page number
        in: query
        name: last_seen_id
        type: integer
      - default: 12
        description: Limit per page
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Pictures'
      summary: Get pictures paginated
      tags:
      - pictures
  /signup/register:
    post:
      consumes:
      - application/json
      description: Sign up
      parameters:
      - description: Email
        in: body
        name: email
        required: true
        schema:
          type: string
      - description: Password
        in: body
        name: password
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: Sign up
      tags:
      - users
swagger: "2.0"
